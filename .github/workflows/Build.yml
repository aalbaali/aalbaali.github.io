name: Build
on:
  pull_request:
    branches:
      - main
      - master

jobs:
  build-site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # Update: the following code snippet failed. It gave the following error:
      # Error: The head commit for this pull_request event is not ahead of the base commit. Please submit an issue on this action's GitHub repo.

      # Get changed files. The changed files will be used to inspect what Pluto
      # notebooks changed so they're built to HTML. Store the files into a space separated varaible
      - id: files
        uses: jitterbit/get-changed-files@v1
        env:
          CHANGED_FILES: steps.files.outputs.all

      - name: Display changed files
        run: julia -e 'changed_files = "${{ steps.files.outputs.added_modified }}";
                       println(typeof(changed_files));
                       re = r"^(\.\/)?notebooks\/[^\/]*\.jl$";
                       all_files = split(changed_files);
                       julia_files = filter(f -> occursin(re, f), all_files);
                       for (i, file) in enumerate(julia_files)
                          println(string(i) * "-- " * file);
                       end'

      # NOTE: Python is necessary for the pre-rendering (minification) step
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      # NOTE: Here you can install dependencies such as matplotlib if you use
      # packages such as PyPlot.
      - run: pip install matplotlib
      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: 1.7

      # Build modified Pluto files and move files to the appropriate locations
      # At the moment, each file is rebuilt, so it needs to be improved.
      - name: export-pluto
        run: |
          mkdir -p notebooks/html;
          julia -e 'import Pkg; Pkg.add("Pluto");
                    using Pluto;
                    # Julia files
                    nb_dir = "notebooks";
                    nb_files = filter(x -> contains(x, ".jl"), readdir(nb_dir));
                    for file_jl in nb_files
                      s = Pluto.ServerSession();                    
                      nb = Pluto.SessionActions.open(s, joinpath(nb_dir, file_jl);
                                                      run_async=false);
                      html_contents = Pluto.generate_html(nb);

                      filename_html = split(file_jl, ".")[1] * ".html"
                      write(joinpath(nb_dir, "html", filename_html), html_contents);
                    end'
        
      # NOTE
      #   The steps below ensure that NodeJS and Franklin are loaded then it
      #   installs highlight.js which is needed for the prerendering step
      #   (code highlighting + katex prerendering).
      #   Then the environment is activated and instantiated to install all
      #   Julia packages which may be required to successfully build your site.
      #   The last line should be `optimize()` though you may want to give it
      #   specific arguments, see the documentation or ?optimize in the REPL.
      - run: julia -e '
          using Pkg; Pkg.activate("."); Pkg.instantiate();
          using NodeJS; run(`$(npm_cmd()) install highlight.js purgecss`);
          Pkg.add(Pkg.PackageSpec(name="Franklin", rev="master"));
          using Franklin;
          optimize();
          io = IOBuffer();
          run(pipeline(`$(NodeJS.npm_cmd()) root`, stdout=io));
          nodepath = String(take!(io));
          run(`bash -c "$(strip(nodepath))/purgecss/bin/purgecss.js --css __site/css/bootstrap.min.css --content __site/index.html __site/about/*.html __site/tags/*.html __site/posts/**/*.html  --output __site/css/bootstrap.min.css"`);
          '